x0 = TEXTURE_SIZE * 0
x1 = TEXTURE_SIZE * 1
x2 = TEXTURE_SIZE * 2
x3 = TEXTURE_SIZE * 3
x4 = TEXTURE_SIZE * 4
x5 = TEXTURE_SIZE * 5
x6 = TEXTURE_SIZE * 6
x7 = TEXTURE_SIZE * 7

INTERACTIVES = {
  pantry: {
    x: 11,
    y: 19,
    w: GRID_SIZE,
    h: GRID_SIZE * 2,
    path: "sprites/interactives.png",
    opportunities: [
      { x: 11, y: 19, test: :lower },
      { x: 11, y: 19, anchor_y: -1, test: :upper },
    ],
    states: {
      default: {
        tile_x: x0,
        tile_y: x0,
        tile_w: x1,
        tile_h: x2,
        sound: { input: "sounds/door.wav" },
        transitions: {
          upper: proc { $actor != $state.hero || $state.hero.level != :floor },
          lower: proc { $stools.values.none? { |obj| (10.3...11.7).cover?(obj.x / GRID_SIZE) && obj.y.idiv(GRID_SIZE) == 18 } },
        },
      },
      upper: {
        tile_x: x0,
        tile_y: x2,
        tile_w: x1,
        tile_h: x2,
        transitions: { default: proc { true } },
      },
      lower: {
        tile_x: x0,
        tile_y: x4,
        tile_w: x1,
        tile_h: x2,
        transitions: { default: proc { true } },
      },
    },
  },
  fridge: {
    x: 10,
    y: 19,
    w: GRID_SIZE,
    h: GRID_SIZE * 2,
    path: "sprites/interactives.png",
    opportunities: [
      { x: 10, y: 19, test: :freezer },
      { x: 10, y: 19, anchor_y: -0.5, test: :fridge },
    ],
    states: {
      default: {
        tile_x: x1,
        tile_y: x0,
        tile_w: x1,
        tile_h: x2,
        transitions: {
          fridge: proc { $actor != $state.hero || $state.hero.level != :floor },
          freezer: proc { $stools.values.none? { |obj| (9.3...10.7).cover?(obj.x / GRID_SIZE) && obj.y.idiv(GRID_SIZE) == 18 } },
        },
      },
      fridge: {
        tile_x: x1,
        tile_y: x2,
        tile_w: x1,
        tile_h: x2,
        transitions: { default: proc { true } },
      },
      freezer: {
        tile_x: x1,
        tile_y: x4,
        tile_w: x1,
        tile_h: x2,
        transitions: { default: proc { true } },
      },
    },
  },
  stove: {
    x: 7,
    y: 19,
    w: GRID_SIZE,
    h: GRID_SIZE * 2,
    path: "sprites/interactives.png",
    states: {
      default: {
        tile_x: x2,
        tile_y: x0,
        tile_w: x1,
        tile_h: x2,
        transitions: {
          stovetop: proc { true },
          oven: proc { true },
        },
      },
      stovetop: {
        tile_x: x2,
        tile_y: x2,
        tile_w: x1,
        tile_h: x2,
        transitions: { default: proc { true } },
      },
      oven: {
        tile_x: x2,
        tile_y: x4,
        tile_w: x1,
        tile_h: x2,
        transitions: { default: proc { true } },
      },
    },
  },
  kitchen_sink: {
    x: 1,
    y: 17,
    w: GRID_SIZE,
    h: GRID_SIZE,
    angle: 90,
    path: "sprites/interactives.png",
    states: {
      default: {
        tile_x: x3,
        tile_y: x0,
        tile_w: x1,
        tile_h: x1,
        transitions: { running: proc { true } },
      },
      running: {
        tile_x: x3,
        tile_y: x1,
        tile_w: x1,
        tile_h: x1,
        transitions: { default: proc { true } },
      },
    },
  },
  bathroom_sink: {
    x: 19,
    y: 2,
    w: GRID_SIZE,
    h: GRID_SIZE,
    angle: 270,
    path: "sprites/interactives.png",
    states: {
      default: {
        tile_x: x3,
        tile_y: x2,
        tile_w: x1,
        tile_h: x1,
        transitions: { running: proc { true } },
      },
      running: {
        tile_x: x3,
        tile_y: x3,
        tile_w: x1,
        tile_h: x1,
        transitions: { default: proc { true } },
      },
    },
  },
  dishwasher: {
    x: 2,
    y: 16,
    w: GRID_SIZE,
    h: GRID_SIZE,
    angle: 90,
    path: "sprites/interactives.png",
    states: {
      default: {
        tile_x: x3,
        tile_y: x4,
        tile_w: x1,
        tile_h: x1,
        sound: { input: "sounds/door.wav" },
        transitions: { open: proc { $stools.values.none? { |obj| obj.x.idiv(GRID_SIZE) == 3 && (15.3...16.7).cover?(obj.y / GRID_SIZE) } } },
      },
      open: {
        tile_x: x3,
        tile_y: x5,
        tile_w: x1,
        tile_h: x1,
        transitions: { default: proc { true } },
      },
    },
  },
  sink_left_cupboard: {
    x: 2,
    y: 14,
    w: GRID_SIZE,
    h: GRID_SIZE,
    angle: 90,
    path: "sprites/interactives.png",
    states: {
      default: {
        tile_x: x4,
        tile_y: x0,
        tile_w: x1,
        tile_h: x1,
        sound: { input: "sounds/door.wav" },
        transitions: { open: proc { true } },
      },
      open: {
        tile_x: x4,
        tile_y: x1,
        tile_w: x1,
        tile_h: x1,
        transitions: { default: proc { true } },
      },
    },
  },
  sink_right_cupboard: {
    x: 2,
    y: 15,
    w: GRID_SIZE,
    h: GRID_SIZE,
    angle: 90,
    path: "sprites/interactives.png",
    states: {
      default: {
        tile_x: x4,
        tile_y: x2,
        tile_w: x1,
        tile_h: x1,
        sound: { input: "sounds/door.wav" },
        transitions: { open: proc { true } },
     },
      open: {
        tile_x: x4,
        tile_y: x3,
        tile_w: x1,
        tile_h: x1,
        transitions: { default: proc { true } },
     },
    },
  },
  sink_double_cupboard: {
    x: 2,
    y: 18,
    w: GRID_SIZE,
    h: GRID_SIZE,
    angle: 90,
    path: "sprites/interactives.png",
    states: {
      default: {
        tile_x: x4,
        tile_y: x4,
        tile_w: x1,
        tile_h: x1,
        sound: { input: "sounds/door.wav" },
        transitions: { open: proc { true } },
      },
      open: {
        tile_x: x4,
        tile_y: x5,
        tile_w: x1,
        tile_h: x1,
        transitions: { default: proc { true } },
      },
    },
  },
  stove_double_cupboard: {
    x: 6,
    y: 19,
    w: GRID_SIZE,
    h: GRID_SIZE,
    path: "sprites/interactives.png",
    states: {
      default: {
        tile_x: x4,
        tile_y: x4,
        tile_w: x1,
        tile_h: x1,
        sound: { input: "sounds/door.wav" },
        transitions: { open: proc { true } },
      },
      open: {
        tile_x: x4,
        tile_y: x5,
        tile_w: x1,
        tile_h: x1,
        transitions: { default: proc { true } },
      },
    },
  },
  stove_left_cupboard: {
    x: 4,
    y: 19,
    w: GRID_SIZE,
    h: GRID_SIZE,
    path: "sprites/interactives.png",
    states: {
      default: {
        tile_x: x4,
        tile_y: x0,
        tile_w: x1,
        tile_h: x1,
        sound: { input: "sounds/door.wav" },
        transitions: { open: proc { true } },
      },
      open: {
        tile_x: x4,
        tile_y: x1,
        tile_w: x1,
        tile_h: x1,
        transitions: { default: proc { true } },
      },
    },
  },
  stove_right_cupboard: {
    x: 5,
    y: 19,
    w: GRID_SIZE,
    h: GRID_SIZE,
    path: "sprites/interactives.png",
    states: {
      default: {
        tile_x: x4,
        tile_y: x2,
        tile_w: x1,
        tile_h: x1,
        sound: { input: "sounds/door.wav" },
        transitions: { open: proc { true } },
      },
      open: {
        tile_x: x4,
        tile_y: x3,
        tile_w: x1,
        tile_h: x1,
        transitions: { default: proc { true } },
      },
    },
  },
  stove_triple_drawers: {
    x: 8,
    y: 19,
    w: GRID_SIZE,
    h: GRID_SIZE,
    path: "sprites/interactives.png",
    states: {
      default: {
        tile_x: x5,
        tile_y: x0,
        tile_w: x1,
        tile_h: x1,
        sound: { input: "sounds/door.wav" },
        transitions: {
          top: proc { true },
          middle: proc { true },
          bottom: proc { true },
        },
      },
      top: {
        tile_x: x5,
        tile_y: x1,
        tile_w: x1,
        tile_h: x1,
        transitions: { default: proc { true } },
      },
      middle: {
        tile_x: x5,
        tile_y: x2,
        tile_w: x1,
        tile_h: x1,
        transitions: { default: proc { true } },
      },
      bottom: {
        tile_x: x5,
        tile_y: x3,
        tile_w: x1,
        tile_h: x1,
        transitions: { default: proc { true } },
      },
    },
  },
  stove_double_drawers: {
    x: 9,
    y: 19,
    w: GRID_SIZE,
    h: GRID_SIZE,
    path: "sprites/interactives.png",
    states: {
      default: {
        tile_x: x6,
        tile_y: x0,
        tile_w: x1,
        tile_h: x1,
        sound: { input: "sounds/door.wav" },
        transitions: {
          top: proc { true },
          bottom: proc { true },
        },
      },
      top: {
        tile_x: x6,
        tile_y: x1,
        tile_w: x1,
        tile_h: x1,
        transitions: { default: proc { true } },
      },
      bottom: {
        tile_x: x6,
        tile_y: x2,
        tile_w: x1,
        tile_h: x1,
        transitions: { default: proc { true } },
      },
    },
  },
  flour_bin: {
    x: 3,
    y: 19,
    w: GRID_SIZE,
    h: GRID_SIZE,
    path: "sprites/interactives.png",
    states: {
      default: {
        tile_x: x5,
        tile_y: x4,
        tile_w: x1,
        tile_h: x1,
        sound: { input: "sounds/door.wav" },
        transitions: { open: proc { true } },
      },
      open: {
        tile_x: x5,
        tile_y: x5,
        tile_w: x1,
        tile_h: x1,
        transitions: { default: proc { true } },
      },
    },
  },
  microwave: {
    x: 1,
    y: 14,
    w: GRID_SIZE,
    h: GRID_SIZE,
    path: "sprites/interactives.png",
    angle: 90,
    states: {
      default: {
        tile_x: x7,
        tile_y: x0,
        tile_w: x1,
        tile_h: x1,
        sound: { input: "sounds/door.wav", pitch: 2.3 },
        transitions: { open: proc { true } },
      },
      open: {
        tile_x: x7,
        tile_y: x1,
        tile_w: x1,
        tile_h: x1,
        transitions: { default: proc { true } },
      },
    },
  },
  cookie_jar: {
    x: 3,
    y: 20,
    w: GRID_SIZE,
    h: GRID_SIZE,
    path: "sprites/interactives.png",
    opportunities: [
      { x: 3, y: 19, anchor_y: -1, test: :default },
    ],
    states: {
      default: {
        tile_x: x6,
        tile_y: x3,
        tile_w: x1,
        tile_h: x1,
        transitions: { default: proc { $state.hero.level != :floor } },
      },
    },
  },
}

$gtk.reset
